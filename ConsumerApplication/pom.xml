<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>2.3.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>ru.cbr.dekart</groupId>
    <artifactId>leveldown</artifactId>
    <version>1.0</version>
    <name>leveldown</name>
    <description>LevelDown</description>

    <properties>
        <java.version>1.8</java.version>
        <dockerfile-plugin-version>1.4.3</dockerfile-plugin-version>
        <dockerRegistry>{*}</dockerRegistry>
        <ppod.project.version>{*}</ppod.project.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <!-- Библиотеки Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Библиотеки Kafka -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
        </dependency>

        <!-- Библиотеки Логгирования -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>5.2</version>
        </dependency>

        <!-- Библиотеки Minio -->
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
            <version>7.0.2</version>
        </dependency>

        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>

        <!-- Библиотеки декарта -->
<!--        <dependency>-->
<!--            <groupId>ru.cbr.dekart</groupId>-->
<!--            <artifactId>descartes-config-client</artifactId>-->
<!--            <version>0.1</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>ru.cbr.dekart</groupId>-->
<!--            <artifactId>descartes-monitoring-client</artifactId>-->
<!--            <version>2.0</version>-->
<!--        </dependency>-->

        <!-- Библиотеки для сбора метрик -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>1.7.0</version>
        </dependency>
        <!--<dependency>
            <groupId>ru.cbr.dekart</groupId>
            <artifactId>descartes-lib-metric</artifactId>
            <version>1.0</version>
        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>ru.cbr.tomsk.ppod</groupId>-->
<!--            <artifactId>monitoring-spring-boot-2-starter</artifactId>-->
<!--            <version>1.0.1</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>ru.cbr.tomsk.ppod</groupId>-->
<!--            <artifactId>monitoring-spring-boot-starter-core</artifactId>-->
<!--            <version>1.0.1</version>-->
<!--        </dependency>-->

        <!-- Библиотеки для тестов -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.12.3</version>
            <scope>test</scope>
        </dependency>

        <!-- Логирование событий безопасности -->
<!--        <dependency>-->
<!--            <groupId>ru.cbr.tomsk.ppod</groupId>-->
<!--            <artifactId>logger-spring-boot-starter</artifactId>-->
<!--            <version>1.0.0</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>ru.cbr.dekart</groupId>-->
<!--            <artifactId>descartes-security-logging</artifactId>-->
<!--            <version>1.2</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
              
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-plugin-version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>${dockerRegistry}/${project.artifactId}</repository>
                    <tag>${ppod.project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
        <finalName>leveldown</finalName>
    </build>

</project>